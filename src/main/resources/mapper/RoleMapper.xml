<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.test.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.example.test.pojo.Role">
  <id column="roleId" jdbcType="VARCHAR" property="roleId" />
  <result column="roleName" jdbcType="VARCHAR" property="roleName" />
  <result column="role_Pwd" jdbcType="VARCHAR" property="role_Pwd" />
  <result column="roleSex" jdbcType="VARCHAR" property="roleSex" />
  <result column="roleAuth" jdbcType="VARCHAR" property="roleAuth" />
  <result column="rolePhone" jdbcType="VARCHAR" property="rolePhone" />
  <result column="roleCard" jdbcType="VARCHAR" property="roleCard" />
  <result column="roleId" jdbcType="INTEGER" property="roleId" />
  <result column="roleJob" jdbcType="VARCHAR" property="roleJob" />
  <result column="roleLeader" jdbcType="VARCHAR" property="roleLeader" />
  <result column="roleEmail" jdbcType="VARCHAR" property="roleEmail" />
</resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from role
    where rolePhone = #{rolePhone,jdbcType=VARCHAR} AND
    roleName = #{roleName,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByPhone" parameterType="java.lang.String">
    delete from role
    where rolePhone = #{rolePhone,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.example.test.pojo.Role" useGeneratedKeys="true" keyProperty="id">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        roleId,
      </if>
      <if test="roleName != null">
        roleName,
      </if>
      <if test="role_Pwd != null">
        role_Pwd,
      </if>
      <if test="roleSex != null">
        roleSex,
      </if>
      <if test="roleAuth != null">
        roleAuth,
      </if>
      <if test="rolePhone != null">
        rolePhone,
      </if>
      <if test="roleCard != null">
        roleCard,
      </if>
      <if test="roleId != null">
        roleId,
      </if>
      <if test="roleJob != null">
        roleJob,
      </if>
      <if test="roleLeader != null">
        roleLeader,
      </if>
      <if test="roleEmail != null">
        roleEmail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId},
      </if>
      <if test="roleName != null">
        #{roleName},
      </if>
      <if test="role_Pwd != null">
        #{role_Pwd},
      </if>
      <if test="roleSex != null">
        #{roleSex},
      </if>
      <if test="roleAuth != null">
        #{roleAuth},
      </if>
      <if test="rolePhone != null">
        #{rolePhone},
      </if>
      <if test="roleCard != null">
        #{roleCard},
      </if>
      <if test="roleId != null">
        #{roleId},
      </if>
      <if test="roleJob != null">
        #{roleJob},
      </if>
      <if test="roleLeader != null">
        #{roleLeader},
      </if>
      <if test="roleEmail != null">
        #{roleEmail},
      </if>
    </trim>
  </insert>

  <select id="selectOneByPhone" resultMap="BaseResultMap">
    select roleName, role_Pwd, roleSex, rolePhone, roleAuth,roleCard, roleEmail, roleJob,roleLeader
    from role
    where rolePhone = #{rolePhone,jdbcType=VARCHAR}
  </select>


  <!-- <update id="updateByPrimaryKey" parameterType="com.example.test.pojo.User">
       update t_user
       set username = #{username,jdbcType=VARCHAR},
       password = #{password,jdbcType=VARCHAR},
       last_login_time = #{last_login_time,jdbcType=DATE},
       last_login_ip = #{last_login_ip,jdbcType=VARCHAR},
       mobile = #{mobile,jdbcType=VARCHAR},
       email = #{email,jdbcType=VARCHAR}
       where id = #{id,jdbcType=INTEGER}
   </update>-->

  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select roleName, role_Pwd, roleSex, rolePhone, roleCard, roleEmail, roleJob,roleLeader
    from role
    where rolePhone = #{rolePhone,jdbcType=VARCHAR} and
    roleName=#{roleName,jdbcType=VARCHAR}
  </select>


  <!--<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert">
    insert into role (id, role_name, descpt, 
      code, insert_uid, insert_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{role_name,jdbcType=VARCHAR}, #{descpt,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, #{insert_uid,jdbcType=INTEGER}, #{insert_time,jdbcType=DATE}, 
      #{update_time,jdbcType=DATE})
  </insert>
  <update id="updateByPrimaryKey" >
    update role
    set role_name = #{role_name,jdbcType=VARCHAR},
      descpt = #{descpt,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      insert_uid = #{insert_uid,jdbcType=INTEGER},
      insert_time = #{insert_time,jdbcType=DATE},
      update_time = #{update_time,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, role_name, descpt, code, insert_uid, insert_time, update_time
    from role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, role_name, descpt, code, insert_uid, insert_time, update_time
    from role
  </select>-->
</mapper>